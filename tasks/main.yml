---
- include_tasks: osx.yml
  when: ansible_os_family == 'Darwin'

- include_tasks: ubuntu.yml
  when: ansible_distribution == 'Ubuntu'

- name: Manage Terraform CLI credentials
  ansible.builtin.blockinfile:
    path: "~{{ terraform_user_id }}/.terraformrc"
    create: true
    owner: "{{ terraform_user_id }}"
    mode: u=rw
    block: |
      credentials "{{ item.key }}" {
        token = "{{ item.value }}"
      }
    marker: "# {mark} --------------------- ANSIBLE MANAGED BLOCK - {{ item.key }} managed by ansible-role-terraform"
  when: terraform_backend_creds is defined
  loop: "{{ terraform_backend_creds | dict2items }}"
  no_log: true

- name: Manage Terraform CLI extra config
  ansible.builtin.blockinfile:
    path: "~{{ terraform_user_id }}/.terraformrc"
    create: true
    owner: "{{ terraform_user_id }}"
    mode: u=rw
    block: "{{ terraform_cli_config_extra }}"
    marker: "# {mark}  --------------------- ANSIBLE MANAGED BLOCK"
  when: terraform_cli_config_extra is defined

- include_tasks: download_alt_versions.yml
  loop: "{{ terraform_alt_versions | dict2items }}"
  when: terraform_alt_versions is defined

- name: Download Terraform latest version
  ansible.builtin.unarchive:
    remote_src: true
    src: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_{{ ansible_system | lower }}_{{ terraform_arch[ansible_architecture] }}.zip"
    dest: /usr/local/bin/
    owner: "{{ terraform_user_id }}"
    mode: u=rwx,g=rx,o=rx
  when: ansible_system == "Linux"
